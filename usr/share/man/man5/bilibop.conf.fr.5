.TH BILIBOP.CONF 5 2020\-02\-08 bilibop "Bilibop Project"

.SH NOM
bilibop.conf \- fichier de configuration des paquets bilibop

.SH SYNOPSIS
/etc/bilibop/bilibop.conf

.SH DESCRIPTION
.B bilibop.conf
est le fichier de configuration des paquets
.B bilibop\-*
qui sont prévus pour être utilisés sur des systèmes tournant depuis un
périphérique externe et modifiable (USB, FireWire, MMC, eSATA). Il est
composé de paires
.BR VARIABLE = VALEUR
où
.B VARIABLE
est une chaîne commençant par
.RI \(aq BILIBOP_ \(aq,
et
.B VALEUR
doit être entourée de guillemets si elle contient des caractères
d'espacement (espaces ou tabulations). Les espaces autour du signe égal
(=) ne sont pas permis. Les lignes vides ou celles commençant par un
signe dièse (#) sont ignorées.
.PP
Les options de configuration valides peuvent être divisées en sections
\(aqcommune\(aq et \(aqspécifiques\(aq, comme suit:

.SH VARIABLES COMMUNES

.SS BILIBOP_COMMON_BASENAME
Cette variable définit le nom des sous\-répertoires (ou d'un lien
symbolique) propres à bilibop qui seront créés dans
.I /dev
et
.I /run
au moment du démarrage, depuis l'environnement du disque mémoire initial
(initramdisk) ou depuis le système en cours d'éxécution. Si elle est vide
ou non définie, sa valeur sera
.RI \(aq bilibop \(aq.
Si vous la modifiez, vous devez prendre garde que certains liens
symboliques ou réglages personnels de votre système reflètent correctement
cette nouvelle valeur. Au minimum, si
.B bilibop\-rules
est installé, vous devriez exécuter les scripts d'aide fournis par ce
paquet, soit à la main, soit avec
.RB \(aq dpkg\-reconfigure
.BR bilibop\-rules \(aq.
Donc ce n'est peut\-être pas une bonne idée de la modifier.
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SH VARIABLES SPÉCIFIQUES À BILIBOP\-LOCKFS

.SS BILIBOP_LOCKFS
Cette variable définit le comportement principal du script initramfs
.IR bilibop\-lockfs .
Sa valeur est de type booléen:
.PP
Si elle est fixée à
.IR false ,
le système démarrera normalement, et les autres variables
BILIBOP_LOCKFS_* seront ignorées, à l'exception de
.BR BILIBOP_LOCKFS_NOTIFY_POLICY .
Si elle est fixée à
.IR true ,
le script initramfs déplacera le système de fichiers racine du système
vers un point de montage utilisé comme branche inférieure et accessible
en lecture seule d'un point de montage
.BR aufs (5)
ou
.B overlay
utilisé lui\-même comme racine du système. Après quoi le fichier temporaire
et accessible en écriture
.I /etc/fstab
sera modifié pour préparer les autres systèmes de fichiers à être montés
comme branches non modifiables d'autres systèmes de fichiers aufs ou
overlay.
.PP
Si cette variable ne vaut rien ou vaut n'importe quoi d'autre, une
heuristique sera utilisée pour la fixer à
.I true
ou
.IR false ,
ceci dépendant de l'attribut \(aqremovable\(aq (amovible) du disque dans
sysfs, sachant que généralement les clés USB sont vues comme media amovibles
.RI ( true ),
et les disques durs externes sont vus comme media non amovibles
.RI ( false ).
.PP
Dans tous les cas, la valeur de cette variable peut être écrasée depuis la
ligne de commande de démarrage en ajoutant
.RB \(aq lockfs \(aq
ou
.RB \(aq nolockfs \(aq
aux paramètres du noyau. Cependant, si le périphérique est verrouillé
physiquement par un commutateur, cela sera detecté et les paramétrages
précédents seront écrasés pour fixer
.B BILIBOP_LOCKFS
à
.IR true .
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_LOCKFS_POLICY
Cette variable definit un niveau additionnel de verrouillage (\(aqlock\(aq)
à activer ou non. Sa valeur peut être écrasée depuis la ligne de commande
de démarrage avec
.RB \(aq lockfs=hard \(aq
ou
.RB \(aq lockfs=soft \(aq.
.IP \(bu 2
.I soft
.br
Les branches inférieures des systèmes de fichiers
.BR aufs (5)
ou
.B overlay
utiliseront l'option
.RB \(aq ro \(aq
(readonly). Ensuite, ces systèmes de fichiers accessibles en lecture seule
peuvent être remontés manuellement comme accessibles en lecture\-écriture
pour permettre à l'administratrice d'y sauvegarder certains changements.
Ce genre d'action est fortement découragé ici, mais reste possible si vous
savez VRAIMENT ce que vous faites; autrement, cela peut mener à des
résultats inattendus, dont évidemment la perte de données.
.IP \(bu 2
.I hard
.br
Les branches inférieures des points de montage aufs utiliseront l'option
.RB \(aq rr \(aq
(real readonly); aufs utilise cette option pour optimiser certaines
opérations internes.
De plus, les périphériques bloc correspondants seront eux aussi paramètrés
comme accessibles en lecture seule en utilisant
.B read_only_volume_list
dans
.BR lvm.conf (5)
pour les Volumes Logiques, ou
.BR blockdev (8)
pour les autres périphériques bloc,
évitant ainsi l'accès en écriture bas niveau (même par l'administratrice)
sur ces périphériques, et évitant aussi un remontage ultérieur en
lecture\-écriture.
.PP
Si cette variable ne vaut rien ou vaut n'importe quoi d'autre, sa valeur
retombera à
.IR hard .
Cependant, si le périphérique est verrouillé physiquement, les paramétrages
précédents seront écrasés et la politique
.I hard
sera automatiquement appliquée.
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_LOCKFS_UNION_METHOD
Cette variable definit quel module unionfs utiliser de préférence. Comme ce
module peut ne pas être supporté par le noyau en cours d'usage, l'autre
module supporté par \(aqbilibop\-lockfs\(aq est appelé en secours. La valeur
de cette variable peut être surchargée depuis la ligne de commande de
démarrage avec
.RB \(aq lockfs=aufs \(aq
ou
.RB \(aq lockfs=overlay \(aq.
.IP \(bu 2
.I aufs
.br
Essaie d'utiliser d'abord \(aqaufs\(aq, sinon \(aqoverlay\(aq.
.IP \(bu 2
.I overlay
.br
Essaie d'utiliser d'abord \(aqoverlay\(aq, sinon \(aqaufs\(aq.
.PP
Si cette variable est vide ou non définie, ou vaut n'importe quoi d'autre,
sa valeur retombera à
.IR aufs .
Ainsi l'installation du paquet aufs-dkms le rend immédiatement utilisable.
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_LOCKFS_PATH_PREFIX
Cette variable définit le répertoire principal sous lequel toutes les
branches accessibles en lecture ou en écriture sont montées. Ce peut être
n'importe quelle chaîne de caractères, pour autant que le nom soit valide
et que le répertoire n'éxiste pas encore. Sa valeur peut être surchargée
depuis la ligne de commande de démarrage avec
.RB \(aq lockfs=:prefix \(aq
(notez le caractère deux-points, qui sert de marqueur).
.PP
Si cette variable est vide ou non définie, sa valeur prendra le nom du
module en cours d'utilisation (c'est à dire
.I aufs
ou
.IR overlay ).
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_LOCKFS_PATH_SCHEME
Cette variable définit la structure de chaque ensemble de branches, au
regard des autres. Elle existe parce que contrairement à aufs, overlay
ne permet pas facilement d'imbriquer les points de montage en une
sous-arborscence unique (particulièrement les répertoires accessibles
en écriture, ou
.BR upperdirs ).
La valeur de cette variable peut être surchargée depuis la ligne de
commande de démarrage avec
.RB \(aq lockfs=isolated \(aq
ou
.RB \(aq lockfs=hybrid \(aq
ou
.RB \(aq lockfs=nested \(aq.
.IP \(bu 2
.I isolated
.br
Chanque ensemble de branches relatif à un montage aufs ou overlay est
créé dans un répertoire dédié. Par exemple, pour une union sur
.IR /usr/local ,
.BI /$union/usr/local /ro
et
.BI /$union/usr/local /rw
sont utilisés. Avec ce schéma, les branches relatives à un montage $union
spécifique sont clairement identifiées, mais les liens symboliques entre
systèmes de fichiers différents sont cassés (sur les branches, pas sur leur
union).
.IP \(bu 2
.I nested
.br
Toutes les branches en lecture seule sont placées dans une sous-arborescence
unique, et toutes les branches modifiables sont placées dans une autre
sous-arborescence. Chacune de ces sous-arborescences est facile à parcourir,
et les liens symboliques sont préservés. Par exemple, pour un montage aufs
sur
.IR /usr/local ,
.BI /aufs/ro /usr/local
et
.BI /aufs/rw /usr/local
sont utilisés. Ce schéma n'est pas disponible avec
.BR overlay ,
et reste le schéma par défaut avec
.BR aufs ,
par compatibilité avec les versions 0.4.23 et antérieures de bilibop.
.IP \(bu 2
.I hybrid
.br
Les branches en lecture seule sont imbriquées (nested), et les branches
accessibles en écriture sont isolées (isolated).
.PP
Si cette variable est vide ou non définie, ou vaut n'importe quoi d'autre,
sa valeur retombera à
.I nested
avec aufs, et
.I isolated
avec overlay.
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_LOCKFS_WHITELIST
Une fois que le système de fichiers racine est verrouillé comme branche
inférieure accessible en lecture seule d'un point de montage pour aufs
ou overlay, le fichier
.I /etc/fstab
est modifié sur la branche supérieure et accessible en lecture\-écriture,
pour verrouiller de la même façon tous les autres systèmes de fichiers
locaux. Cette variable offre la possibilité d'éviter ce mécanisme pour
certains points de montage: il s'agit d'une liste de points de montage
ou de noms de périphériques (tels que connus dans
.BR fstab (5))
ou encore de lexèmes (\(aqtokens\(aq) de la forme
.BR UUID = fsuuid ,
.BR LABEL = fslabel
ou
.BR TYPE = fstype
séparés par des espaces.
Si l'étiquette (LABEL) d'un système de fichiers contient elle\-même des
espaces, remplacez\-les par des tirets bas (_), comme donnés par la sortie
des commandes
.RB \(aq udevadm
info \-\-query property \-\-name
.IR PÉRIPHÉRIQUE \(aq
ou
.RB \(aq blkid
\-o udev \-p
.IR PÉRIPHÉRIQUE \(aq
pour les variables
.IR ID_FS_UUID ,
.I ID_FS_LABEL
et
.IR ID_FS_TYPE .
Notez que lister ici un point de montage, un nom de périphérique ou
n'importe quel lexème qui correspond littéralement à une entrée du fichier
fstab fait que le périphérique est filtré au niveau du script initramfs,
ce qui est plus rapide. Autrement,
.BR mount.lockfs (8)
cherchera à partir des métadonnées du périphérique s'il doit le sauter ou
pas.
.PP
Notez que le montage sur
.I /usr
étant maintenant effectué dans l'initramfs, son verrouillage doit être
fait aussi dans l'initramfs. Cela signifie que seul l'analyseur simpliste
de cette phase du démarrage est disponible à ce moment, et que le moyen le
plus simple de lister
.I /usr
est de l'appeler
.BR /usr ,
et rien d'autre, pour éviter des erreurs de démarrage et des résultats
inattendus.
.PP
Notez aussi qu'il est possible d'écraser (et de vider) la valeur de cette
variable en ajoutant
.RB \(aq lockfs=all \(aq
sur la ligne de commmande de démarrage. Cela est fait automatiquement quand
le périphérique est verrouillé physiquement. Au contraire, pour ajouter des
points de montage à cette liste blanche depuis la ligne de commande du
démarrage, il est aussi possible d'utiliser une option de la forme
.RB \(aq lockfs=\-/foobar \(aq,
où
.I /foobar
est le point de montage à ne pas verrouiller; notez qu'il est précédé d'un
signe moins
.RB ( \- ).
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_LOCKFS_FALLBACK_POLICY
Si une option de montage ou un type de système de fichiers n'est pas
supporté par
.BR aufs (5)
ou
.BR overlay ,
mount.lockfs échouera à le verrouiller comme attendu. Cette variable definit
la stratégie à appliquer en cas d'erreur de montage. Sa valeur peut être
surchargée depuis la ligne de commande de démarrage avec
.RB \(aq lockfs=ro \(aq
ou
.RB \(aq lockfs=asis \(aq.
.IP \(bu 2
.I ro
.br
Le script d'aide au montage essaiera de monter le système de fichiers de
manière standard, mais en lecture seule pour empêcher des modifications
par erreur.
.IP \(bu 2
.I asis
.br
Le script d'aide au montage essaiera de monter le système de fichiers de
manière standard.
.PP
Si cette variable est vide ou non définie, ou vaut n'importe quoi d'autre,
sa valeur retombera à
.IR ro .
.PP
Cependant, si le périphérique est verrouillé physiquement, les paramétrages
précédents seront écrasés et la politique
.I ro
sera automatiquement appliquée.
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_LOCKFS_SIZE
Par défaut,
.B bilibop\-lockfs
alloue la moitié de la taille de la mémoire vive (ou TPMFS_SIZE si cette
variable est initialisée dans
.IB /etc/default/tmpfs )
pour chaque branche supérieure d'un système de fichiers verrouillé. Il
est possible d'écraser cette valeur pour certains points de montage dans
une liste de paires
.BR /point/de/montage = taille
séparées par des espaces. Les tailles peuvent être absolues (suffixées
par k, K, m, M, g ou G), ou relatives à la quantité totale de mémoire RAM
(et suffixées par %). La taille allouée à la racine du système peut être
fixée ici aussi, mais peut être écrasée depuis la ligne de commade de
démarrage avec le paramètre
.RB \(aq lockfs = taille \(aq.
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_LOCKFS_SWAP_POLICY
Cette variable définit la politique d'utilisation des périphériques
d'échange (swap) listés dans
.I /etc/fstab
(et optionnellement dans
.IR /etc/crypttab ).
Generalement, il n'y a pas de sens a paramètrer un espace d'échange sur de
la mémoire flash, mais cela peut se faire sur des disques durs externes
USB, FireWire ou eSATA. Cinq politiques sont disponibles:
.IP \(bu 2
.I soft
.br
Rien n'est modifié: les lignes dans
.BR fstab (5)
et
.BR crypttab (5)
sont conservées telles quelles.
.IP \(bu 2
.I hard
.br
Les entrées relatives aux périphériques \(aqswap\(aq sont désactivées
(commentées) dans fstab et crypttab.
.IP \(bu 2
.I noauto
.br
Le mot\-clé
.RI \(aq noauto \(aq
est ajouté à la liste des options relatives aux périphériques \(aqswap\(aq
dans fstab et crypttab. Cela signifie que ces périphériques peuvent être
activés manuellement avec
.BR swapon (8).
.IP \(bu 2
.I crypt
.br
Les entrées relatives aux périphériques \(aqswap\(aq chiffrés sont
conservées, les autres sont désactivées.
.BR ATTENTION :
cette option ne fait pas de distinction entre les périphériques swap
chiffrés avec une clef aléatoire (et dont le contenu est irrécupérable
après l'arrêt du système) et ceux dont le contenu est écrit en clair
sur un Volume Logique faisant lui-même partie d'un Groupe de Volumes
chiffré.
.IP \(bu 2
.I random
.br
Les entrées relatives aux périphériques \(aqswap\(aq chiffrés avec une
clef aléatoire sont conservées, les autres sont désactivées.
.PP
Si BILIBOP_LOCKFS_SWAP_POLICY n'est pas fixée à une valeur connue, elle
retombera à
.I crypt
ou
.IR hard .
Cela dépend de l'attribut \(aqremovable\(aq (amovible) du disque dans sysfs:
pour les media vus comme amovibles (clés USB), la politique est de ne pas
utiliser du tout de périphérique d'échange
.RI ( hard
policy). Notez que dans tous les cas, l'utilisation de \(aqswap\(aq peut
être désactivée depuis la ligne de commande de démarrage avec le paramètre
noyau
.IR noswap ,
qui n'est pas une option de démarrage spécifique à
.BR bilibop (7),
mais fixe la valeur de BILIBOP_LOCKFS_SWAP_POLICY à
.IR hard .
C'est aussi le cas si le script détecte que le périphérique est verrouillé
physiquement.
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_LOCKFS_NOTIFY_POLICY
Cette variable définit à quelles conditions une notification doit être
envoyée à l'utilisatrice pour lui signifier que des systèmes de fichiers
sont ou non verrouillés. De telles notifications peuvent être envoyées
aussi bien au démarrage du système (nécessite que le paquet
.B plymounth
soit installé) qu'au lancement d'une session de bureau (nécessite que le
paquet
.B libnotify\-bin
soit installé). Ce qui suit décrit les notifications de bureau; les
messages de
.BR plymouth (8)
sont moins bavards. Quatre politiques sont disponibles:
.IP \(bu 2
.I always
.br
C'est la valeur de secours quand la variable vaut autre chose que
.IR never ,
.I lockfs
ou
.IR nolockfs .
Si la fonctionalité
.B bilibop\-lockfs
est désactivée, alors une notification sera envoyée pour dire que toutes
les informations de la session peuvent être écrites sur le disque.
Si la fonctionnalité est activée, une notification sera envoyée pour dire
que toutes les modifications faites sous les points de montage aufs ou
overlay (listés) seront perdues à l'arrêt du système. Si des systèmes de
fichiers ne sont pas verrouillés, une deuxième notification sera envoyée
pour dire que leurs modifications seront conservées à l'arrêt du système.
.IP \(bu 2
.I never
.br
Ne jamais envoyer de notification concernant le verrouillage ou non
verrouillage des systèmes de fichiers.
.IP \(bu 2
.I lockfs
.br
Si la fonctionnalité
.B bilibop\-lockfs
est activée, alors une notification sera envoyée pour dire que toutes les
modifications faites sous les points de montage aufs ou overlay (listés)
seront perdues à l'arrêt du système.
.IP \(bu 2
.I nolockfs
.br
Si la fonctionnalité
.B bilibop\-lockfs
est désactivée, fait la même chose que pour
.IR always .
Si la fonctionnalité est activée et que des systèmes de fichiers ne sont
pas verrouillés, alors une notification sera envoyée pour dire que leurs
modifications seront conservées après l'arrêt du système.
.PP
Dans tous les cas, n'importe quelle utilisatrice peut (pour sa propre
session de bureau) écraser le règlage de l'administratrice en copiant
.I lockfs\-notify.desktop
(normalement dans
.IR /etc/xdg/autostart )
dans son propre répertoire
.I .config/autostart
et en modifiant les lignes commençant par
.B Exec=
ou
.BR Hidden= .
Voir
.BR lockfs\-notify (1)
pour plus de détails.
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SH VARIABLES SPÉCIFIQUES À BILIBOP\-RULES
Contrairement à la plupart des variables précédentes dont les modifications
ne prennent effet qu'après le redémarrage du système, la plupart des
variables BILIBOP_RULES_* suivantes, à l'exception notable de la première,
peuvent être modifiées, et les changements immédiatement appliqués au cours
de la même session en éxécutant
.RB \(aq lsbilibop
.BR \-c \(aq.
Voir
.BR lsbilibop (8).

.SS BILIBOP_RULES_SYSTEM_INTERNAL
Par défaut, les règles bilibop utilisent les capacités de
.B udisks
(versions 
.B 1.x
et
.BR 2.x )
pour outrepasser la détection usuelle du type de bus permettant de détecter
si un périphérique est considéré comme \(aqsystem internal\(aq, c'est à dire
comme disque interne de l'ordinateur. Cela signifie que des privilèges
d'administratrice sont nécessaires pour gérer les périphériques faisant
partie du même disque que celui contenant la racine du système. Si vous
n'avez pas besoin de ce comportement global, vous devez explicitement fixer
cette variable à
.I false
(les autres valeurs n'ont aucun effet, c'est à dire ont le même effet que
.IR true ).
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_RULES_SYSTEM_INTERNAL_WHITELIST
Si BILIBOP_RULES_SYSTEM_INTERNAL n'est pas \(aqfalse\(aq, toutes les
partitions hébergées par le même disque que la racine du système seront
considérées comme \(aqsystem internal\(aq.
Pour désactiver ce comportement pour certains périphériques \(em par
exemple si vous voulez qu'une partition soit montable/démontable sans
privilèges \(em vous pouvez les lister ici, séparés par des espaces.
Pour chaque périphérique ou groupe de périphériques, vous devez spécifier
au moins un lexème de la forme
.BR UUID = fsuuid ,
.BR LABEL = fslabel ,
.BR TYPE = fstype
ou
.BR USAGE = fsusage .
Si l'étiquette (LABEL) d'un système de fichiers contient elle\-même des
espaces, remplacez\-les par des tirets bas (_), comme donnés par la sortie
des commandes
.RB \(aq udevadm
info \-\-query property \-\-name
.IR PÉRIPHÉRIQUE \(aq
ou
.RB \(aq blkid
\-o udev \-p
.IR PÉRIPHÉRIQUE \(aq
pour les variables
.IR ID_FS_UUID ,
.IR ID_FS_LABEL ,
.I ID_FS_TYPE
et
.IR ID_FS_USAGE .
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_RULES_PRESENTATION_HIDE
Par défaut, les règles bilibop masquent (si possible) les systèmes de
fichiers contenus sur le même disque physique que la racine du système.
Cela s'applique aux applications de bureau basées sur
.B udisks
(versions 
.B 1.x
et
.BR 2.x ).
Si vous ne voulez pas masquer les volumes bilibop, vous devez explicitement
fixer cette variable à
.I false
(les autres valeurs n'ont aucun effet, c'est à dire ont le même effet que
.IR true ).
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_RULES_PRESENTATION_HIDE_WHITELIST
Si BILIBOP_RULES_PRESENTATION_HIDE n'est pas \(aqfalse\(aq, tous les volumes
hébergés sur le même disque que la racine du système seront cachés à
l'utilisatrice. Pour désactiver ce comportement pour certains périphériques,
vous pouvez les lister ici, séparés par des espaces. Pour chaque
périphérique ou groupe de périphériques, vous devez spécifier au moins un
lexème de la forme
.BR UUID = fsuuid ,
.BR LABEL = fslabel ,
.BR TYPE = fstype
ou
.BR USAGE = fsusage .
Si l'étiquette (LABEL) d'un système de fichiers contient elle\-même des
espaces, remplacez\-les par des tirets bas (_), comme donnés par la sortie
des commandes
.RB \(aq udevadm
info \-\-query property \-\-name
.IR PÉRIPHÉRIQUE \(aq
ou
.RB \(aq blkid
\-o udev \-p
.IR PÉRIPHÉRIQUE \(aq
pour les variables
.IR ID_FS_UUID ,
.IR ID_FS_LABEL ,
.I ID_FS_TYPE
et
.IR ID_FS_USAGE .
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_RULES_PRESENTATION_ICON
Si un périphérique n'est pas caché à l'utilisatrice, il peut être montré
avec une autre icône que celle par défaut.
Pour chaque périphérique ou groupe de périphériques auquel vous voulez
associer une autre icône, vous devez spécifier au moins une valeur de la
forme
.BR UUID = fsuuid : icon ,
.BR LABEL = fslabel : icon ,
.BR TYPE = fstype : icon
ou
.BR USAGE = fsusage : icon .
Le nom de l'icône doit suivre la spécification des thèmes d'icônes de
freedesktop.org.
Si l'étiquette (LABEL) d'un système de fichiers contient elle\-même des
espaces, remplacez\-les par des tirets bas (_), comme donnés par la sortie
des commandes
.RB \(aq udevadm
info \-\-query property \-\-name
.IR PÉRIPHÉRIQUE \(aq
ou
.RB \(aq blkid
\-o udev \-p
.IR PÉRIPHÉRIQUE \(aq
pour les variables
.IR ID_FS_UUID ,
.IR ID_FS_LABEL ,
.I ID_FS_TYPE
et
.IR ID_FS_USAGE .
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SS BILIBOP_RULES_PRESENTATION_NAME
Si un périphérique n'est pas caché à l'utilisatrice, il peut être montré
avec un autre nom que celui par défaut (généralement l'étiquette du système
de fichiers).
Pour chaque périphérique ou groupe de périphériques dont vous voulez
modifier le nom par défaut, vous devez spécifier au moins une valeur de la
forme
.BR UUID = fsuuid : name ,
.BR LABEL = fslabel : name ,
.BR TYPE = fstype : name
ou
.BR USAGE = fsusage : name .
Si l'étiquette (LABEL) d'un système de fichiers contient elle\-même des
espaces, remplacez\-les par des tirets bas (_), comme donnés par la sortie
des commandes
.RB \(aq udevadm
info \-\-query property \-\-name
.IR PÉRIPHÉRIQUE \(aq
ou
.RB \(aq blkid
\-o udev \-p
.IR PÉRIPHÉRIQUE \(aq
pour les variables
.IR ID_FS_UUID ,
.IR ID_FS_LABEL ,
.I ID_FS_TYPE
et
.IR ID_FS_USAGE .
.PP
Par défaut, la valeur de cette variable n'est pas fixée.

.SH FICHIERS
/etc/bilibop/bilibop.conf
.br
/usr/share/doc/bilibop\-common/examples/bilibop.conf
.br
/usr/share/doc/bilibop\-lockfs/examples/bilibop.conf
.br
/usr/share/doc/bilibop\-rules/examples/bilibop.conf

.SH VOIR AUSSI
.BR aufs (5),
.BR bilibop (7),
.BR blkid (8),
.BR crypttab (5),
.BR fstab (5),
.BR lockfs\-notify (1),
.BR lsbilibop (8),
.BR mount (8),
.BR mount.lockfs (8),
.BR notify\-send (1),
.BR plymouth (8),
.BR proc (5),
.BR udev (7),
.BR udevadm (8),
.BR udisks (7),
.BR udisks (8)

.SH AUTEUR
Cette page de manuel a été traduite de l'anglais par Alexandre Martin
<alemar@Safe\-mail.net> dans le cadre du projet bilibop.
